"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[28786],{603905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(667294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=p(t),u=i,g=c["".concat(l,".").concat(u)]||c[u]||m[u]||s;return t?a.createElement(g,o(o({ref:n},d),{},{components:t})):a.createElement(g,o({ref:n},d))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,o=new Array(s);o[0]=c;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r.mdxType="string"==typeof e?e:i,o[1]=r;for(var p=2;p<s;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},550401:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var a=t(487462),i=t(263366),s=(t(667294),t(603905)),o=["components"],r={toc_min_heading_level:2,toc_max_heading_level:4,slug:"/API-Documentation"},l="API Documentation",p={unversionedId:"API-Documentation/index",id:"API-Documentation/index",title:"API Documentation",description:"Introduction",source:"@site/docs/90-API-Documentation/index.md",sourceDirName:"90-API-Documentation",slug:"/API-Documentation",permalink:"/API-Documentation",draft:!1,tags:[],version:"current",lastUpdatedAt:1748871614,formattedLastUpdatedAt:"2 Jun 2025",frontMatter:{toc_min_heading_level:2,toc_max_heading_level:4,slug:"/API-Documentation"},sidebar:"docs",previous:{title:"Multitenancy",permalink:"/Multitenancy"},next:{title:"3rd Party Licenses",permalink:"/3rdpartylicenses"}},d={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Interacting with the API from Python",id:"interacting-with-the-api-from-python",level:2},{value:"Imports and Setup",id:"imports-and-setup",level:3},{value:"Initiate a Connection",id:"initiate-a-connection",level:3},{value:"Interaction with Custom Indexes",id:"interaction-with-custom-indexes",level:3},{value:"Create an Index",id:"create-an-index",level:4},{value:"List Indexes",id:"list-indexes",level:4},{value:"Modify an Index",id:"modify-an-index",level:4},{value:"Data Injection into the Index",id:"data-injection-into-the-index",level:4},{value:"Delete an Index",id:"delete-an-index",level:4}],c={toc:m};function u(e){var n=e.components,r=(0,i.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"api-documentation"},"API Documentation"),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"This part of the Sycope system documentation presents an example of how to interact with the system's API."),(0,s.kt)("h2",{id:"interacting-with-the-api-from-python"},"Interacting with the API from Python"),(0,s.kt)("p",null,"This is a minimal example of interacting with the API using a Python script. When working with code in a development or production environment, it\u2019s important to ensure secure storage of credentials, such as passwords and other sensitive variables."),(0,s.kt)("p",null,"The code shown below is also available in a ",(0,s.kt)("a",{parentName:"p",href:"assets/notebook.ipynb"},"notebook"),"."),(0,s.kt)("h3",{id:"imports-and-setup"},"Imports and Setup"),(0,s.kt)("p",null,"At the beginning of our script, we import the necessary libraries.",(0,s.kt)("br",{parentName:"p"}),"\n","In the case of requests, it must first be installed using ",(0,s.kt)("inlineCode",{parentName:"p"},"pip install requests"),".",(0,s.kt)("br",{parentName:"p"}),"\n","Because we are using a self-signed certificate, for code clarity, it's possible to disable warnings."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"import requests\nfrom urllib3.exceptions import InsecureRequestWarning\n\n# Disable SSL warnings (self-signed certificate)\nrequests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)\n")),(0,s.kt)("h3",{id:"initiate-a-connection"},"Initiate a Connection"),(0,s.kt)("p",null,"The code shown below initiates a connection to the Sycope API."),(0,s.kt)("p",null,"Remember to replace the variables with your own values."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"HOST")," - The IP address of the host, or the domain if one is used, e.g. ",(0,s.kt)("inlineCode",{parentName:"li"},'"https://10.0.0.100"'),", ",(0,s.kt)("inlineCode",{parentName:"li"},'"https://sycope.example.com"'),"  "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"USERNAME")," and ",(0,s.kt)("strong",{parentName:"li"},"PASSWORD")," are the same as for the web interface, i.e., the ones set during the initial setup of Sycope in ",(0,s.kt)("a",{parentName:"li",href:"/Installation-Guide/Lets-Start#set-sycope-admin-password"},"Let's Start")," (the default values are shown below).")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'# Variables\nHOST = "https://10.0.0.100"\nUSERNAME = "admin"\nPASSWORD = "qwerty"\n\n# Start a Session\nsession = requests.Session()\n\n# Send a POST Request to Log in\npayload = {"username": USERNAME, "password": PASSWORD}\nrequest = session.post(HOST + "/npm/api/v1/login", json=payload, verify=False)\n')),(0,s.kt)("p",null,"Next, we check the response. Status ",(0,s.kt)("strong",{parentName:"p"},"200")," and code ",(0,s.kt)("strong",{parentName:"p"},"OK")," indicate that the session has started correctly."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"# Check the Request\nrequest.json()\n\n# Output\n{'status': 200, 'code': 'OK'}\n")),(0,s.kt)("p",null,"Once the session is open, we can start interacting with the API."),(0,s.kt)("h3",{id:"interaction-with-custom-indexes"},"Interaction with Custom Indexes"),(0,s.kt)("p",null,"In this section, we will show how to create a new custom index, make modifications to it, send data to the index, and also how to delete a selected index."),(0,s.kt)("h4",{id:"create-an-index"},"Create an Index"),(0,s.kt)("p",null,"To add a new index, it is necessary to specify its name and define the fields (columns) it should contain."),(0,s.kt)("p",null,"Variables:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"CUSTOM_INDEX_NAME")," - The name of the new index."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"FIELDS")," - Fields in the index. ")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Fields")," is a list of dictionaries containing the following keys: "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"name")," - The column name."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"type")," - The data type.",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Available types: ",(0,s.kt)("strong",{parentName:"li"},"string"),", ",(0,s.kt)("strong",{parentName:"li"},"boolean"),", ",(0,s.kt)("strong",{parentName:"li"},"byte"),", ",(0,s.kt)("strong",{parentName:"li"},"short"),", ",(0,s.kt)("strong",{parentName:"li"},"int"),", ",(0,s.kt)("strong",{parentName:"li"},"long"),", ",(0,s.kt)("strong",{parentName:"li"},"float"),", ",(0,s.kt)("strong",{parentName:"li"},"double"),", ",(0,s.kt)("strong",{parentName:"li"},"ip"),", ",(0,s.kt)("strong",{parentName:"li"},"ip4"),", ",(0,s.kt)("strong",{parentName:"li"},"ip6"),", ",(0,s.kt)("strong",{parentName:"li"},"subnet"),", ",(0,s.kt)("strong",{parentName:"li"},"ifc"),", ",(0,s.kt)("strong",{parentName:"li"},"mac"),", ",(0,s.kt)("strong",{parentName:"li"},"set")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"sortable")," - Boolean value indicating whether it is possible to sort by this column. Can be set only for numeric types: ",(0,s.kt)("strong",{parentName:"li"},"byte"),", ",(0,s.kt)("strong",{parentName:"li"},"short"),", ",(0,s.kt)("strong",{parentName:"li"},"int"),", ",(0,s.kt)("strong",{parentName:"li"},"long"),", ",(0,s.kt)("strong",{parentName:"li"},"float"),", ",(0,s.kt)("strong",{parentName:"li"},"double"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"description")," - The column description."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"displayName")," - The display name.")),(0,s.kt)("p",null,"Fields can be defined according to your needs, however, the only mandatory one is ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("inlineCode",{parentName:"strong"},"Timestamp")),", which accepts values in ",(0,s.kt)("strong",{parentName:"p"},"milliseconds"),". e.g. ",(0,s.kt)("strong",{parentName:"p"},"1738677059000"),"."),(0,s.kt)("p",null,"Timestamp:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'{\n    "name": "timestamp",\n    "type": "long",\n    "sortable": True,\n    "description": "Timestamp",\n    "displayName": "Time Field",\n}\n')),(0,s.kt)("p",null,"Below is the code to create a sample custom index:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'CUSTOM_INDEX_NAME = "Custom_Test_Index"\nFIELDS = [\n    {\n        "name": "timestamp",\n        "type": "long",\n        "sortable": True,\n        "description": "Timestamp",\n        "displayName": "Time Field",\n    },\n    {\n        "name": "test_ip4",\n        "type": "ip4",\n        "description": "Test ipv4 field",\n        "displayName": "IP4 test",\n    },\n    {\n        "name": "test_ip6",\n        "type": "ip6",\n        "description": "Test ipv6 field",\n        "displayName": "IP6 test",\n    },\n    {\n        "name": "test_string",\n        "type": "string",\n        "description": "Test string field",\n        "displayName": "string test",\n    },\n    {\n        "name": "test_boolean",\n        "type": "boolean",\n        "description": "Test boolean field",\n        "displayName": "boolean test",\n    },\n    {\n        "name": "test_float",\n        "type": "float",\n        "description": "Test float field",\n        "displayName": "float test",\n    },\n    {\n        "name": "test_double",\n        "type": "double",\n        "description": "Test double field",\n        "displayName": "double test",\n    },\n]\n\n\npayload = {\n    "category": "userIndex.index",\n    "config": {\n        "name": CUSTOM_INDEX_NAME,\n        "active": True,\n        "rotation": "daily",\n        "storeRaw": True,\n        "fields": FIELDS,\n    },\n}\nrequest = session.post(\n    HOST + "/npm/api/v1/config-element-index/user-index", json=payload, verify=False\n)\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"# Check the Request\nrequest.json()\n\n# Output\n{'status': 200, 'code': 'OK', 'id': '65ac6a43-8173bfdf-d1815c2c'}\n")),(0,s.kt)("p",null,"The output also includes the ",(0,s.kt)("strong",{parentName:"p"},"ID")," of the newly created index.",(0,s.kt)("br",{parentName:"p"}),"\n","The ID will be needed later for ",(0,s.kt)("strong",{parentName:"p"},"modifying")," or ",(0,s.kt)("strong",{parentName:"p"},"deleting")," the index."),(0,s.kt)("p",null,"This is how it looks in Sycope under ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("inlineCode",{parentName:"strong"},"[Menu > Raw Data]")),"."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Custom Index",src:t(153658).Z,width:"3409",height:"1704"})),(0,s.kt)("p",null,"By clicking on ",(0,s.kt)("strong",{parentName:"p"},"Columns"),", you can select which ones will be visible."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Columns",src:t(623828).Z,width:"3409",height:"1704"})),(0,s.kt)("h4",{id:"list-indexes"},"List Indexes"),(0,s.kt)("p",null,"Run the code below to list the existing custom indexes in your Sycope system."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"request = session.get(\n    HOST + '/npm/api/v1/config-elements?filter=category=\"userIndex.index\"', verify=False\n)\n")),(0,s.kt)("p",null,"This is what the response looks like. In our case, there is only one custom index."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'request.json()["total"]\n\n# Output\n1\n')),(0,s.kt)("p",null,"We can access the ID directly."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'request.json()["data"][0]["id"]\n\n# Output\n\'65adb33f-cb50dadf-8bf808d8\'\n')),(0,s.kt)("p",null,"And here is the full response with detailed data."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"request.json()[\"data\"]\n\n# Output\n[{'id': '65adb33f-cb50dadf-8bf808d8',\n  'category': 'userIndex.index',\n  'module': None,\n  'created': 1746823609965,\n  'createdBy': 'admin',\n  'modified': 1746823609965,\n  'modifiedBy': 'admin',\n  'annotations': None,\n  'miscData': None,\n  'attributes': None,\n  'singleConfigurationInstance': None,\n  'tags': None,\n  'config': {'name': 'Custom_Test_Index',\n   'active': True,\n   'rotation': 'daily',\n   'storeRaw': True,\n   'fields': [{'name': 'timestamp',\n     'type': 'long',\n     'sortable': True,\n     'description': 'Timestamp',\n     'displayName': 'Time Field'},\n    {'name': 'test_ip4',\n     'type': 'ip4',\n     'description': 'Test ipv4 field',\n     'displayName': 'IP4 test'},\n    {'name': 'test_ip6',\n     'type': 'ip6',\n     'description': 'Test ipv6 field',\n     'displayName': 'IP6 test'},\n    {'name': 'test_string',\n     'type': 'string',\n     'description': 'Testowe string field',\n     'displayName': 'string test'},\n    {'name': 'test_boolean',\n     'type': 'boolean',\n     'description': 'Testowe boolean field',\n     'displayName': 'boolean test'},\n    {'name': 'test_float',\n     'type': 'float',\n     'description': 'Testowe float field',\n     'displayName': 'float test'},\n    {'name': 'test_double',\n     'type': 'double',\n     'description': 'Testowe double field',\n     'displayName': 'double test'}]}}]\n")),(0,s.kt)("h4",{id:"modify-an-index"},"Modify an Index"),(0,s.kt)("p",null,"You can modify an index by adding new fields or updating existing ones.",(0,s.kt)("br",{parentName:"p"}),"\n","However, updates are limited to the ",(0,s.kt)("strong",{parentName:"p"},"description")," and ",(0,s.kt)("strong",{parentName:"p"},"displayName")," properties \u2014 the ",(0,s.kt)("strong",{parentName:"p"},"name"),", ",(0,s.kt)("strong",{parentName:"p"},"sortable"),", and ",(0,s.kt)("strong",{parentName:"p"},"type")," of a field cannot be changed.",(0,s.kt)("br",{parentName:"p"}),"\n","Additionally, it's not possible to remove fields that already exist in the index."),(0,s.kt)("p",null,"In the example below, we add a new field named ",(0,s.kt)("strong",{parentName:"p"},"test_additional_column"),".",(0,s.kt)("br",{parentName:"p"}),"\n","Keep in mind that modifying an index requires its ID. You can find it using the ",(0,s.kt)("a",{parentName:"p",href:"#list-indexes"},"List Indexes")," function."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'INDEX_ID = "65adb33f-cb50dadf-8bf808d8"\n\nCUSTOM_INDEX_NAME = "Custom_Test_Index"\nFIELDS = [\n    {\n        "name": "timestamp",\n        "type": "long",\n        "sortable": True,\n        "description": "Timestamp",\n        "displayName": "Time Field",\n    },\n    {\n        "name": "test_ip4",\n        "type": "ip4",\n        "description": "Test ipv4 field",\n        "displayName": "IP4 test",\n    },\n    {\n        "name": "test_ip6",\n        "type": "ip6",\n        "description": "Test ipv6 field",\n        "displayName": "IP6 test",\n    },\n    {\n        "name": "test_string",\n        "type": "string",\n        "description": "Test string field",\n        "displayName": "string test",\n    },\n    {\n        "name": "test_boolean",\n        "type": "boolean",\n        "description": "Test boolean field",\n        "displayName": "boolean test",\n    },\n    {\n        "name": "test_float",\n        "type": "float",\n        "description": "Test float field",\n        "displayName": "float test",\n    },\n    {\n        "name": "test_double",\n        "type": "double",\n        "description": "Test double field",\n        "displayName": "double test",\n    },\n    {\n        "name": "test_additional_column",\n        "type": "string",\n        "description": "Test adding a column",\n        "displayName": "add col test",\n    },\n]\n\n\npayload = {\n    "category": "userIndex.index",\n    "config": {\n        "name": CUSTOM_INDEX_NAME,\n        "active": True,\n        "rotation": "daily",\n        "storeRaw": True,\n        "fields": FIELDS,\n    },\n}\nrequest = session.put(\n    HOST + f"/npm/api/v1/config-element-index/user-index/{INDEX_ID}", json=payload, verify=False\n)\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"request.json()\n# Output\n{'status': 200, 'code': 'OK'}\n")),(0,s.kt)("p",null,"The modification was successful, and our index now includes the additional column:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"New Column",src:t(399261).Z,width:"3409",height:"1704"})),(0,s.kt)("h4",{id:"data-injection-into-the-index"},"Data Injection into the Index"),(0,s.kt)("p",null,"Sending data to a custom index is shown in the example below.\nTo do this, just create a payload with the data you want to send and submit it.",(0,s.kt)("br",{parentName:"p"}),"\n","Use the example as a reference."),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Remember that data can only be injected into ",(0,s.kt)("strong",{parentName:"p"},"custom indexes")," \u2014 the system will not allow you to add data to built-in indexes, such as ",(0,s.kt)("strong",{parentName:"p"},"netflow"),".")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'columns = [\n        "timestamp",\n        "test_string",\n        "test_ip4",\n        "test_ip6",\n        "test_float",\n        "test_double",\n        "test_boolean",\n    ]\n\ninput = [\n    [\n        1746823336771,\n        "eventType1",\n        "172.16.60.1",\n        "2001:db8:3333:4444:5555:6666:7777:8888",\n        1,\n        1.2,\n        True,\n    ],\n    [\n        1746823337771,\n        "eventType2",\n        "172.16.60.2",\n        "2001:db8:3333:4444:5555:6666:7777:8888",\n        2.2,\n        1.3,\n        False,\n    ],\n    [\n        1746823338771,\n        "eventType1",\n        "172.16.60.3",\n        "2001:db8:3333:4444:5555:6666:7777:8888",\n        3.5,\n        1.4,\n        False,\n    ],\n]\n\npayload = {\n    "columns": columns,\n    "indexName": CUSTOM_INDEX_NAME,\n    "sortTimestamp": True,\n    "rows": input,\n}\nrequest = session.post(HOST + "/npm/api/v1/index/inject", json=payload, verify=False)\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"request.json()\n# Output\n{'status': 200, 'code': 'OK'}\n")),(0,s.kt)("p",null,"The data was sent successfully, and we can now view it in Sycope:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Send Data",src:t(437092).Z,width:"3409",height:"1704"})),(0,s.kt)("h4",{id:"delete-an-index"},"Delete an Index"),(0,s.kt)("p",null,"Deleting an index is quite straightforward \u2014 all you need is to send the appropriate request with an index ID."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'INDEX_ID = "65ac6a43-8173bfdf-d1815c2c"\n\nrequest = session.delete(HOST+f"/npm/api/v1/config-element-index/user-index/{INDEX_ID}", verify=False)\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"request.json()\n# Output\n{'status': 200, 'code': 'OK'}\n")))}u.isMDXComponent=!0},623828:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/all-columns-ca70fad92eebdae287e7ef1b0355d133.png"},153658:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/custom-test-index-d5210037a86c998cb849d6d9fec52acf.png"},399261:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/modify-7774278a314b1ec9831fef00d60c0324.png"},437092:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/send-input-data-cb56d3cfeaee39a74f19a153dcd38e0e.png"}}]);